// Initial GeoJSON object
const geojson = {
  type: "FeatureCollection",
  features: [
    {
      type: "Feature",
      geometry: {
        type: "Point",
        coordinates: [-77.032, 38.913]
      },
      properties: {
        title: "Mapbox",
        description: "Washington, D.C."
      }
    },
    {
      type: "Feature",
      geometry: {
        type: "Point",
        coordinates: [-122.414, 37.776]
      },
      properties: {
        title: "Mapbox",
        description: "San Francisco, California"
      }
    }
  ]
};

// Create the map
const map = new mapboxgl.Map({
  container: "map", // Container ID
  style: "mapbox://styles/mapbox/light-v11", // Mapbox style
  center: [-96, 37.8], // Initial center position
  zoom: 3 // Initial zoom level
});

// Function to add all markers from geojson to the map
function addMarkers() {
  // Clear existing markers (optional: add a mechanism to track and remove old ones)
  document.querySelectorAll(".marker").forEach(marker => marker.remove());

  // Loop through each feature and add a marker
  for (const feature of geojson.features) {
    const el = document.createElement("div");
    el.className = "marker";

    new mapboxgl.Marker(el)
      .setLngLat(feature.geometry.coordinates)
      .setPopup(
        new mapboxgl.Popup({ offset: 25 }).setHTML(
          `<h3>${feature.properties.title}</h3><p>${feature.properties.description}</p>`
        )
      )
      .addTo(map);
  }
}

// Initial rendering of markers
addMarkers();

// Add a click event listener to the map
map.on("click", (e) => {
  const clickedPosition = {
    lng: e.lngLat.lng.toFixed(4),
    lat: e.lngLat.lat.toFixed(4)
  };

  console.log("Clicked at:", clickedPosition);

  // Add the clicked position to the geojson object
  geojson.features.push({
    type: "Feature",
    geometry: {
      type: "Point",
      coordinates: [clickedPosition.lng, clickedPosition.lat]
    },
    properties: {
      title: `Marker at ${clickedPosition.lng}, ${clickedPosition.lat}`,
      description: "This marker was added dynamically!"
    }
  });

  // Log updated geojson
  console.log("Updated geojson:", geojson);

  // Re-render all markers
  addMarkers();
});

// Initial GeoJSON object
const geojson = {
  type: "FeatureCollection",
  features: [
    {
      type: "Feature",
      geometry: {
        type: "Point",
        coordinates: [-77.032, 38.913],
      },
      properties: {
        title: "Mapbox",
        description: "Washington, D.C.",
      },
    },
    {
      type: "Feature",
      geometry: {
        type: "Point",
        coordinates: [-122.414, 37.776],
      },
      properties: {
        title: "Mapbox",
        description: "San Francisco, California",
      },
    },
  ],
};

// Create the map
const map = new mapboxgl.Map({
  container: "map", // Container ID
  style: "mapbox://styles/mapbox/light-v11", // Mapbox style
  center: [-96, 37.8], // Initial center position
  zoom: 3, // Initial zoom level
});

// Function to add all markers from geojson to the map
function addMarkers() {
  // Clear existing markers (optional: add a mechanism to track and remove old ones)
  document.querySelectorAll(".marker").forEach((marker) => marker.remove());

  // Loop through each feature and add a marker
  for (const feature of geojson.features) {
    const el = document.createElement("div");
    el.className = "marker";

    new mapboxgl.Marker(el)
      .setLngLat(feature.geometry.coordinates)
      .setPopup(
        new mapboxgl.Popup({ offset: 25 }).setHTML(
          `<h3>${feature.properties.title}</h3><p>${feature.properties.description}</p>`
        )
      )
      .addTo(map);
  }
}

// Initial rendering of markers
addMarkers();

// Add a click event listener to the map
map.on("click", (e) => {
  const clickedPosition = {
    lng: e.lngLat.lng.toFixed(4),
    lat: e.lngLat.lat.toFixed(4),
  };

  console.log("Clicked at:", clickedPosition);

  // Add the clicked position to the geojson object
  geojson.features.push({
    type: "Feature",
    geometry: {
      type: "Point",
      coordinates: [clickedPosition.lng, clickedPosition.lat],
    },
    properties: {
      title: `Marker at ${clickedPosition.lng}, ${clickedPosition.lat}`,
      description: "This marker was added dynamically!",
    },
  });

  // Log updated geojson
  console.log("Updated geojson:", geojson);

  // Re-render all markers
  addMarkers();
});
